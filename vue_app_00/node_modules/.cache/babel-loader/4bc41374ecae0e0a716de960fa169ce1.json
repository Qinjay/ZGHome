{"remainingRequest":"C:\\Users\\web\\Desktop\\榛果\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\web\\Desktop\\榛果\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\web\\Desktop\\榛果\\src\\components\\xz\\Login.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\web\\Desktop\\榛果\\src\\components\\xz\\Login.vue","mtime":1559201758732},{"path":"C:\\Users\\web\\Desktop\\榛果\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\web\\Desktop\\榛果\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\web\\Desktop\\榛果\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      accountPlaceholder: \"请输入用户名\",\n      uname: \"\",\n      upass: \"\"\n    };\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n\n      //完成用户登录\n      // 1.获取输入的用户名\n      var uname = this.uname; // 2.获取用户输入的密码\n\n      var upass = this.upass; // 3.创建二个正则表达式\n\n      var reg1 = /^[\\w-]{3,16}$/;\n      var reg2 = /^[\\w-]{3,8}$/; // 4.判断用户名格式不正确\n\n      if (!reg1.test(uname)) {\n        this.$toast(\"用户名格式不正确\");\n        return;\n      } // 5.判断密码格式不正确\n\n\n      if (!reg2.test(upass)) {\n        this.$toast(\"密码格式不正确\");\n        return;\n      } // 6.发送用户名和密码\n\n\n      var url = \"login\";\n      var obj = {\n        uname: uname,\n        upass: upass\n      }; // 7.获取服务器返回结果\n\n      this.axios.get(url, {\n        params: obj\n      }).then(function (result) {\n        // console.log(result)\n        //result对象服务器返回结果\n        if (result.data.code == 1) {\n          //登录成功提示\n          //this.$messagebox(\"消息\",result.data.msg);\n          // 9.返回成功,跳转Home.vue界面\n          _this.$router.push(\"/XZHome\");\n        } else {\n          // 8.返回失败提示\n          _this.$messagebox(\"消息\", result.data.msg);\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,0BAAA,QADA;AAEA,aAAA,EAFA;AAGA,aAAA;AAHA,KAAA;AAKA,GAPA;AAQA,WAAA;AACA,SADA,mBACA;AAAA;;AACA;AACA;AACA,UAAA,QAAA,KAAA,KAAA,CAHA,CAIA;;AACA,UAAA,QAAA,KAAA,KAAA,CALA,CAMA;;AACA,UAAA,OAAA,eAAA;AACA,UAAA,OAAA,cAAA,CARA,CASA;;AACA,UAAA,CAAA,KAAA,IAAA,CAAA,KAAA,CAAA,EAAA;AACA,aAAA,MAAA,CAAA,UAAA;AACA;AACA,OAbA,CAcA;;;AACA,UAAA,CAAA,KAAA,IAAA,CAAA,KAAA,CAAA,EAAA;AACA,aAAA,MAAA,CAAA,SAAA;AACA;AACA,OAlBA,CAmBA;;;AACA,UAAA,MAAA,OAAA;AACA,UAAA,MAAA;AAAA,oBAAA;AAAA;AAAA,OAAA,CArBA,CAsBA;;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AAAA,gBAAA;AAAA,OAAA,EAAA,IAAA,CAAA,kBAAA;AACA;AACA;AACA,YAAA,OAAA,IAAA,CAAA,IAAA,IAAA,CAAA,EAAA;AACA;AACA;AACA;AACA,gBAAA,OAAA,CAAA,IAAA,CAAA,SAAA;AACA,SALA,MAKA;AACA;AACA,gBAAA,WAAA,CAAA,IAAA,EAAA,OAAA,IAAA,CAAA,GAAA;AACA;AACA,OAZA;AAeA;AAvCA;AARA,CAAA","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <!-- 登录提示文字 -->\r\n    <div class=\"tipslogin\">\r\n      <span>你需要登录才能继续访问</span>\r\n      <span class=\"closeSpan\">关闭</span>\r\n    </div>\r\n    <!-- 淘宝logo图片 -->\r\n    <div class=\"imgDiv\">\r\n      <img src=\"../../assets/tblogo.png\" class=\"logo\">\r\n    </div>\r\n    <!-- 操作区域 -->\r\n    <div class=\"operateDiv\">\r\n      <!-- 账号 -->\r\n      <mt-field :placeholder=\"accountPlaceholder\" v-model=\"uname\"></mt-field>\r\n      <!-- 密码 -->\r\n      <mt-field placeholder=\"请输入密码\"  type=\"password\" v-model=\"upass\" class=\"myinput\"></mt-field>\r\n      <!-- 短信验证码 -->\r\n      <!-- 免费注册 -->\r\n      <div>\r\n        <mt-button size=\"large\" class=\"mybutton\" @click=\"login\">登录</mt-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data(){\r\n    return {\r\n    accountPlaceholder:\"请输入用户名\",\r\n    uname:\"\",\r\n    upass:\"\"\r\n  }\r\n},\r\nmethods:{\r\n  login(){\r\n    //完成用户登录\r\n    // 1.获取输入的用户名\r\n    var uname=this.uname;\r\n    // 2.获取用户输入的密码\r\n    var upass=this.upass;\r\n    // 3.创建二个正则表达式\r\n    var reg1=/^[\\w-]{3,16}$/;\r\n    var reg2=/^[\\w-]{3,8}$/;\r\n    // 4.判断用户名格式不正确\r\n    if(!reg1.test(uname)){\r\n      this.$toast(\"用户名格式不正确\");\r\n      return;\r\n    }\r\n    // 5.判断密码格式不正确\r\n    if(!reg2.test(upass)){\r\n      this.$toast(\"密码格式不正确\");\r\n      return;\r\n    }\r\n    // 6.发送用户名和密码\r\n    var url=\"login\";\r\n    var obj={uname,upass};\r\n    // 7.获取服务器返回结果\r\n    this.axios.get(url,{params:obj}).then(result=>{\r\n      // console.log(result)\r\n      //result对象服务器返回结果\r\n       if(result.data.code==1){\r\n          //登录成功提示\r\n          //this.$messagebox(\"消息\",result.data.msg);\r\n          // 9.返回成功,跳转Home.vue界面\r\n          this.$router.push(\"/XZHome\");\r\n       }else{\r\n         // 8.返回失败提示\r\n         this.$messagebox(\"消息\",result.data.msg);\r\n       }\r\n      });\r\n   \r\n\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n   /* 你需要登录才能继续仿问的布局样式 */\r\n    .container{\r\n      background:#fff;\r\n    }\r\n    .tipslogin {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      height: 52px;\r\n      background: rgb(235, 235, 235);\r\n      padding-left: 20px;\r\n      padding-right: 20px;\r\n    }\r\n    /* 半闭样式 */\r\n    .closeSpan {\r\n      color: rgb(153, 153, 153)\r\n    }\r\n    /* 图片 logo 根样式 */\r\n    .imgDiv {\r\n      display: flex;\r\n      justify-content: center;\r\n      border-bottom: 1px solid #f0edec;\r\n    }\r\n    /* 图片样式 */\r\n    .logo{\r\n      width: 80px;\r\n      height: 80px;\r\n    }\r\n    /* 上面的线隐藏 */\r\n    .mint-cell-wrapper  {\r\n      background-image: linear-gradient(180deg, #fff, #fff 0%, transparent 0%);\r\n    }\r\n   /* 输入框底边框样式 */\r\n    .mint-cell-wrapper  {\r\n      border-bottom: 1px solid #ff5000;\r\n    }\r\n\r\n    /* 修改按钮按钮下的默认颜色 */\r\n    .mint-button::after {\r\n      background-color: transparent;\r\n    }\r\n    /* 操作区域的样式*/\r\n    .operateDiv {\r\n      padding-left: 20px;\r\n      padding-right: 20px;\r\n    }\r\n    /* 输入框边距 */\r\n    .myinput {\r\n      margin-top: 30px;\r\n    }\r\n    /* 获取短信验证码字体颜色 */\r\n    .getCode {\r\n      color:#ff5000;\r\n      font-size: 17px;\r\n      border-left:1px solid #b5b5b5;\r\n      padding-left: 7px;\r\n    }\r\n    /* 免费注册根样式 */\r\n    .registerDiv {\r\n      margin-top: 20px;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    }\r\n    /* 免费注册字体样式*/\r\n    .registerDiv span {\r\n      color: #555;\r\n    }\r\n    /* 登录短信验证按钮边距 */\r\n    .mybutton {\r\n      margin-top: 20px;\r\n    }\r\n    /* 修改默认 butoon 的样式 达到和淘宝登录一样 */\r\n    .mint-button--default {\r\n      background: -webkit-linear-gradient(left,#ff9000,#ff5000) no-repeat;\r\n      border-radius: 25px;\r\n      color: #fff;\r\n      height: 48px;\r\n    }\r\n    /* 同上 */\r\n    .mint-button--primary {\r\n      border-radius: 25px;\r\n      height: 48px;\r\n      background-color: transparent;\r\n      border: 1px solid #ff5000;\r\n      color: #ff5000\r\n    }\r\n    /* 修改默认弹框的样式，达到基本和淘宝的效果一样 */\r\n    .mint-msgbox{\r\n      border-radius: 8px;\r\n      width: 70%\r\n    }\r\n    /* 弹出框内容样式 */\r\n    .mint-msgbox-content {\r\n      min-height: 50px;\r\n      font-size: 18px;\r\n    }\r\n    /* 弹出内容居中 */\r\n    .mint-msgbox-message{\r\n      line-height: 50px;\r\n    }\r\n    /* 弹出框确定按钮样式 */\r\n    .mint-msgbox-btns{\r\n      height: 60px;\r\n    }\r\n    /* 弹出框确定按钮字体 */\r\n    .mint-msgbox-confirm {\r\n      color: #f40;\r\n    }\r\n</style>\r\n"],"sourceRoot":"src\\components\\xz"}]}