{"remainingRequest":"C:\\xampp\\htdocs\\QBin\\VUE_UI\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\QBin\\VUE_UI\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\QBin\\VUE_UI\\vue_app_00\\src\\components\\xz\\common\\cart.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\xampp\\htdocs\\QBin\\VUE_UI\\vue_app_00\\src\\components\\xz\\common\\cart.vue","mtime":1559270559919},{"path":"C:\\xampp\\htdocs\\QBin\\VUE_UI\\vue_app_00\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\xampp\\htdocs\\QBin\\VUE_UI\\vue_app_00\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\xampp\\htdocs\\QBin\\VUE_UI\\vue_app_00\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: [] // bool:\"\",\n\n    };\n  },\n  created: function created() {\n    this.loadMore();\n  },\n  methods: {\n    loadMore: function loadMore() {\n      var _this = this;\n\n      //加载购物车商品\n      // var params={uid:uid}\n      this.axios.get(\"cart\").then(function (result) {\n        //this.list=result.data.data;\n        //console.log(result.data.data)\n        //获取数组\n        var rows = result.data.data; //2.创建循环为数组中元素添加cb属性\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n            item.cb = false;\n          } //3.将修改后的数据赋值list\n\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        _this.list = rows;\n      });\n    },\n    delTtem: function delTtem(e) {\n      var _this2 = this;\n\n      //删除指定购物车商品\n      this.$messagebox({\n        title: \"提示\",\n        message: \"是否删除该商品？\",\n        showConfirmButton: true,\n        showCancelButton: true\n      }).then(function (result) {\n        if (result == \"cancel\") {\n          return;\n        } else {\n          var id = e.target.dataset.id; //获取当前商品的id值\n          //console.log(id)\n          //ajax请求\n\n          var params = {\n            id: id\n          };\n\n          _this2.axios.get(\"del\", {\n            params: params\n          }).then(function (result) {\n            _this2.loadMore();\n          });\n        }\n      });\n    },\n\n    /* selAll(e){//选中全选  下面的全部选中\r\n         // var rs=e.target.checked;\r\n          this.bool=e.target.checked;\r\n     },*/\n    selAll: function selAll(e) {\n      var rs = e.target.checked;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n          console.log(rs);\n          item.cb = rs;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    },\n    dellAll: function dellAll() {\n      var _this3 = this;\n\n      //清空购物车\n      //判断购物车中是否有产品\n      this.$messagebox({\n        title: \"提示\",\n        message: \"是否删除全部商品？\",\n        showConfirmButton: true,\n        showCancelButton: true\n      }).then(function (result) {\n        if (result == \"cancel\") {\n          return;\n        } else {\n          //    1.创建变量保存字符串\n          var str = \"\"; //    2.创建循环遍历数组\n\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = _this3.list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var item = _step3.value;\n              str += item.id + \",\";\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n\n          if (str.length == 0) {\n            _this3.$messagebox(\"\", \"请选中要删除的数据\");\n\n            return;\n          } //    3.获取当前元素id拼接字符串\n\n\n          str = str.substring(0, str.length - 1); //    4.发送ajax请求\n          // 创建 url\n\n          var params = {\n            str: str\n          };\n\n          _this3.axios.get(\"delAll\", {\n            params: params\n          }).then(function (result) {\n            _this3.loadMore();\n          });\n        }\n      });\n    },\n    delSel: function delSel() {\n      var _this4 = this;\n\n      //删除选中的商品\n      console.log(this.list); //判断cb==true?\n      //凭借选中的id\n\n      var str = \"\";\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.list[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var item = _step4.value;\n\n          if (item.cb) {\n            str += item.id + \",\";\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      console.log(str); //判断 \n\n      if (str.length == 0) {\n        this.$messagebox(\"\", \"请选中要删除的商品\");\n        return;\n      }\n\n      str = str.substring(0, str.length - 1); //删除末尾的逗号\n\n      var params = {\n        str: str\n      };\n      this.axios.get(\"delAll\", {\n        params: params\n      }).then(function (result) {\n        _this4.loadMore();\n      });\n    }\n  }\n};",{"version":3,"sources":["cart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"cart\"> \r\n        <!-- 全选按钮 -->\r\n        <div class=\"aelectAll\">\r\n        <input type=\"checkbox\" @change=\"selAll\">全选\r\n        </div>\r\n        <!-- 购物车商品信息 -->\r\n        <div class=\"cart-item\" v-for=\"(item,index) of list\" :key=\"index\" >\r\n            <div class=\"leftImg\">\r\n                <input type=\"checkbox\" v-model=\"item.cb\" >\r\n                <img :src=\"'http://127.0.0.1:3000/'+item.img\" alt=\"\" class=\"img\">\r\n                <div class=\"rightImg\">\r\n                    <span>{{item.price.toFixed(2)}}</span>\r\n                    <span>{{item.count}}</span>\r\n\r\n                </div>\r\n            </div>\r\n            <mt-button @click=\"delTtem\" :data-id=\"item.id\">删除</mt-button>\r\n        </div>\r\n        <!-- 删除选中的商品 -->\r\n        <div class=\"dellAll\">\r\n            <mt-button @click=\"dellAll\">清空购物车</mt-button>\r\n            <mt-button @click=\"delSel\">删除选中的商品</mt-button>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data(){return{\r\n        list:[],\r\n        // bool:\"\",\r\n    }},\r\n    created(){\r\n            this.loadMore();\r\n            },\r\n    methods:{\r\n        loadMore(){  //加载购物车商品\r\n            // var params={uid:uid}\r\n            this.axios.get(\"cart\").then(result=>{    \r\n            //this.list=result.data.data;\r\n            //console.log(result.data.data)\r\n            //获取数组\r\n            var rows=result.data.data;\r\n            //2.创建循环为数组中元素添加cb属性\r\n            for(var item of rows){\r\n                item.cb=false;\r\n                }\r\n            //3.将修改后的数据赋值list\r\n             this.list=rows\r\n            \r\n            })\r\n        },\r\n        delTtem(e){  //删除指定购物车商品\r\n            this.$messagebox({\r\n                title:\"提示\",\r\n                message:\"是否删除该商品？\",\r\n                showConfirmButton:true,\r\n                showCancelButton:true,\r\n                }).then(result=>{\r\n                    if(result==\"cancel\"){      \r\n                        return;\r\n                        }else{\r\n                    var id=e.target.dataset.id;//获取当前商品的id值\r\n                    //console.log(id)\r\n                      //ajax请求\r\n                    var params={id}\r\n                    this.axios.get(\"del\",{params}).then(result=>{\r\n                            this.loadMore();\r\n                            })\r\n                    }    \r\n                })\r\n        },\r\n       /* selAll(e){//选中全选  下面的全部选中\r\n            // var rs=e.target.checked;\r\n             this.bool=e.target.checked;\r\n        },*/\r\n       selAll(e){\r\n         var rs=e.target.checked;\r\n           for(var item of this.list){\r\n                console.log(rs)\r\n            item.cb=rs\r\n          }\r\n       },\r\n       dellAll(){//清空购物车\r\n           //判断购物车中是否有产品\r\n           this.$messagebox({\r\n                title:\"提示\",\r\n                message:\"是否删除全部商品？\",\r\n                showConfirmButton:true,\r\n                showCancelButton:true,\r\n                }).then(result=>{\r\n                    if(result==\"cancel\"){      \r\n                        return;\r\n                        }else{  \r\n                    //    1.创建变量保存字符串\r\n                        var str=\"\";\r\n                    //    2.创建循环遍历数组\r\n                    for(var item of this.list){\r\n                        str+=item.id+\",\"  \r\n                    }\r\n                    if(str.length==0){\r\n                        this.$messagebox(\"\",\"请选中要删除的数据\");\r\n                        return;\r\n                    }\r\n                    //    3.获取当前元素id拼接字符串\r\n                    str=str.substring(0,str.length-1)\r\n                    //    4.发送ajax请求\r\n                    // 创建 url\r\n                    var params={str}\r\n                    this.axios.get(\"delAll\",{params}).then(result=>{\r\n                        this.loadMore();\r\n                    })\r\n                 }\r\n                })\r\n\r\n       },\r\n       delSel(){//删除选中的商品\r\n        console.log(this.list)\r\n        //判断cb==true?\r\n        //凭借选中的id\r\n        var str=\"\";\r\n        for(var item of this.list){\r\n            if(item.cb){\r\n                str+=item.id+\",\"\r\n            }\r\n        } console.log(str)\r\n        //判断 \r\n        if(str.length==0){\r\n            this.$messagebox(\"\",\"请选中要删除的商品\");\r\n            return;\r\n        }\r\n            str=str.substring(0,str.length-1);//删除末尾的逗号\r\n           \r\n            var params={str};\r\n            this.axios.get(\"delAll\",{params}).then(result=>{\r\n                this.loadMore();\r\n            })\r\n        \r\n       }\r\n    },\r\n}\r\n</script>\r\n<style scoped>\r\n    .cart-item{\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        }\r\n    .leftImg{\r\n        display:flex;\r\n        align-items: center;\r\n        }\r\n        .img{width:50px;height:50px;}\r\n    .rightImg{\r\n        display:flex;\r\n        align-items: center;\r\n        margin-left:25px;\r\n        }\r\n        .rightImg>span{margin-right:10px;}\r\n</style>\r\n"],"sourceRoot":"src\\components\\xz\\common"}]}